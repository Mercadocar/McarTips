REQUIREMENTS
    - Install az cli
        https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest
    - Install kubectl
        az aks install-cli
    - Install helm 3
        https://helm.sh/docs/intro/install/
    
STEP 1
    Go and Start the AKS creation wizard.
        https://portal.azure.com/#create/microsoft.aks
STEP 2  
    Select your resource group, dont choose for the auto-generated ones,
    prefer the human readable created by you.

STEP 3
    Select "B2s" (or the cheapest based on link at step 4)
    Reason: it is the cheapiest that meet the criterias:
        -> It's not premium disk supported. So all persistent volumes
        created will be HDD.
        -> The smallest machine that allows to create a cluster with just
        one node.
STEP 4
    Go to https://azureprice.net/
    Find the region where Standard_A2_v2 is cheapest.
STEP 5
    One node size, select just 1!
    Disclaimer: dont worry, this is a development enviroment, and 
    you won't use all cluster features. Just 1 is fine.

STEP 6 
    Go to Integrations Tab
    Locate Container Monitoring and DISABLE IT.

STEP 7
    Go ahead and create the cluster.

Tips:
    1. Brand new clusters arent't registered on Image Registries. So some
    of the images wont pull. Ask for permission on the Registry.
    2. Your local kubectl cli isn't configured for the new cluster, so:
        az aks list -o table (to get cluster and resource name)
        az aks get-credentials --resource-group RESOURCE_NAME --name CLUSTER_NAME
        
STEP 8
    Init the local heml repository:
        helm repo index .

STEP 9
    Download the dependency packages:
        helm dependency update

STEP 10
    Deploy chart configuration to the cluster,
    on a new one:
        helm install poc-telepreco .
    or updating an existing one:
        helm upgrade poc-telepreco .

Tip: You can use the arg "--namespace NAMESPACE-NAME" 
     or ommit it to use a default namespace, that can be configured with:
        kubectl config set-context --current --namespace=default

